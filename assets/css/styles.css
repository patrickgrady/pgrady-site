@import url(../webfonts/tiempos/tiempos.css);/*! normalize.css v3.0.2 | MIT License | git.io/normalize */html{-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-rendering:optimizeLegibility;font-feature-settings:"kern";-webkit-font-feature-settings:"kern";font-feature-settings:"kern" 1;-webkit-font-kerning:normal;font-kerning:normal;-webkit-font-feature-settings:"liga" on;font-feature-settings:"liga" on;-webkit-font-feature-settings:"contextual";font-feature-settings:"contextual"}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}a:focus{outline:0}abbr[title]{border-bottom:1px dotted;letter-spacing:.1em}b,strong{font-weight:bold}dfn{font-style:italic}h1{font-size:2em;margin:0.67em 0}mark{background:#ff0;color:#000}small{font-size:0.70233em}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-0.5em}sub{bottom:-0.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:"Lucida Sans Typewriter","Courier New",Consolas,"Andale Mono","Lucida Console",monospace;font-size:0.88889em}code,kbd,samp{background-color:rgba(51,51,51,0.05);padding:.325em .5em;border-radius:3px}del{text-decoration:line-through dotted}ins{text-decoration:underline dotted}s{text-decoration:line-through dotted}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type="button"],input[type="reset"],input[type="submit"]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type="checkbox"],input[type="radio"]{box-sizing:border-box;padding:0}input[type="number"]::-webkit-inner-spin-button,input[type="number"]::-webkit-outer-spin-button{height:auto}input[type="search"]{-webkit-appearance:textfield;box-sizing:content-box}input[type="search"]::-webkit-search-cancel-button,input[type="search"]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid #c0c0c0;margin:0 2px;padding:0.35em 0.625em 0.75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:bold}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}.highlight .c{color:#999988;font-style:italic}.highlight .err{color:#a61717;background-color:#e3d2d2}.highlight .k{font-weight:bold}.highlight .o{font-weight:bold}.highlight .cm{color:#999988;font-style:italic}.highlight .cp{color:#999999;font-weight:bold}.highlight .c1{color:#999988;font-style:italic}.highlight .cs{color:#999999;font-weight:bold;font-style:italic}.highlight .gd{color:#000000;background-color:#ffdddd}.highlight .gd .x{color:#000000;background-color:#ffaaaa}.highlight .ge{font-style:italic}.highlight .gr{color:#aa0000}.highlight .gh{color:#999999}.highlight .gi{color:#000000;background-color:#ddffdd}.highlight .gi .x{color:#000000;background-color:#aaffaa}.highlight .go{color:#888888}.highlight .gp{color:#555555}.highlight .gs{font-weight:bold}.highlight .gu{color:#aaaaaa}.highlight .gt{color:#aa0000}.highlight .kc{font-weight:bold}.highlight .kd{font-weight:bold}.highlight .kp{font-weight:bold}.highlight .kr{font-weight:bold}.highlight .kt{color:#445588;font-weight:bold}.highlight .m{color:#009999}.highlight .s{color:#d14}.highlight .na{color:#008080}.highlight .nb{color:#0086B3}.highlight .nc{color:#445588;font-weight:bold}.highlight .no{color:#008080}.highlight .ni{color:#800080}.highlight .ne{color:#990000;font-weight:bold}.highlight .nf{color:#990000;font-weight:bold}.highlight .nn{color:#555555}.highlight .nt{color:#000080}.highlight .nv{color:#008080}.highlight .ow{font-weight:bold}.highlight .w{color:#bbbbbb}.highlight .mf{color:#009999}.highlight .mh{color:#009999}.highlight .mi{color:#009999}.highlight .mo{color:#009999}.highlight .sb{color:#d14}.highlight .sc{color:#d14}.highlight .sd{color:#d14}.highlight .s2{color:#d14}.highlight .se{color:#d14}.highlight .sh{color:#d14}.highlight .si{color:#d14}.highlight .sx{color:#d14}.highlight .sr{color:#009926}.highlight .s1{color:#d14}.highlight .ss{color:#990073}.highlight .bp{color:#999999}.highlight .vc{color:#008080}.highlight .vg{color:#008080}.highlight .vi{color:#008080}.highlight .il{color:#009999}.element-invisible,.element-focusable{position:absolute !important;height:1px;width:1px;overflow:hidden;clip:rect(1px, 1px, 1px, 1px)}.element-focusable:active,.element-focusable:focus{position:static !important;clip:auto;height:auto;width:auto;overflow:auto}html{background-color:#eee;color:#333;font-family:TiemposText,Georgia,"Times New Roman","DejaVu Serif",serif;font-weight:400;font-size:1em;line-height:1.60181em}@media  (min-width: 30em){html{font-size:1.125em;}}@media  (min-width: 60em){html{font-size:1.26562em;}}body{max-width:90%;margin-left:auto;margin-right:auto}body:after{content:" ";display:block;clear:both}@media  (min-width: 30em){body{max-width:80%;margin-left:auto;margin-right:auto;}body:after{content:" ";display:block;clear:both}}@media  (min-width: 45em){body{max-width:70%;margin-left:auto;margin-right:auto;}body:after{content:" ";display:block;clear:both}}@media  (min-width: 60em){body{max-width:60%;margin-left:auto;margin-right:auto;}body:after{content:" ";display:block;clear:both}}a:link,a:visited{transition:all 0.08s ease;text-decoration:none;color:#0077dd;background-image:linear-gradient(to top, rgba(0, 119, 221, 0.4) .033em, transparent .033em);background-position-y:.875em}a:link:hover,a:link:focus,a:link:active,a:visited:hover,a:visited:focus,a:visited:active{color:#004077;background-image:linear-gradient(to top, rgba(0, 64, 119, 0.4) .033em, transparent .033em)}h1,h2,h3,h4,h5,h6{font-family:TiemposHeadline;line-height:1.125em;margin:1em 0 0.6243em 0}h1{font-size:1.80203em}h2{font-size:1.60181em}h3{font-size:1.42383em}h4{font-size:1.26562em}h5{font-size:1.125em}h6{font-size:1em}p{font-size:1em;margin:1em 0}img{width:100%}section{margin:1.60181em 0}header,footer{margin:1.60181em 0}ul{padding-left:1.125em}ol{padding-left:1.5em}/*!
 * @file (SMACSS module)
 * Defines postList Component
 */.postList{padding-left:0}.postList li{list-style:none;border-bottom:1px solid #d0d0d0}.postList li:first-of-type{border-top:1px solid #d0d0d0}.postList h6{font-family:Helvetica,Arial,"Nimbus Sans L",sans-serif;letter-spacing:.05em;text-transform:uppercase;font-size:0.79012em}.postList h2{margin-top:0}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlcy5zY3NzIiwiX25vcm1hbGl6ZS5zY3NzIiwiX2luaXQuc2NzcyIsIl9zeW50YXgtaGlnaGxpZ2h0LnNjc3MiLCJfbWl4aW5zLWV4dGVuZHMuc2NzcyIsIl9iYXNlLnNjc3MiLCIuLi9wYWNrYWdlcy9icmVha3BvaW50LXNhc3Mvc3R5bGVzaGVldHMvX2JyZWFrcG9pbnQuc2NzcyIsIi4uL3BhY2thZ2VzL3N1c3kvc2Fzcy9zdXN5L2xhbmd1YWdlL3N1c3kvX2NvbnRhaW5lci5zY3NzIiwiLi4vcGFja2FnZXMvc3VzeS9zYXNzL3N1c3kvb3V0cHV0L3N1cHBvcnQvX3JlbS5zY3NzIiwiLi4vcGFja2FnZXMvc3VzeS9zYXNzL3N1c3kvb3V0cHV0L3N1cHBvcnQvX2NsZWFyZml4LnNjc3MiLCJjb21wb25lbnRzL19wb3N0TGlzdC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWNBLDZDQUFBLDREQ0xFLEtBQUEsMEJBQ0EsOEJBQ0EsbUNBQ0Esa0NBQ0Esa0NBQ0EsNkJBQ0EscUNBQ0EsQUFFYywrQkFDUyw0QkFBQSxBQUN2QixvQkFBQSx3Q0FBQSxBQVFBLGdDQUFBLDJDQUFBLEFBYXVCLGtDQUFBLENBQUEsS0FBWSxRQUFRLENBQUEsMkZBeUIzQyxhQUFTLENBQUEsNEJBQ08scUJBUVIsdUJBRVIsQ0FBQSxzQkFVQSxhQUFTLFFBV1QsQ0FBQSxrQkFBa0IsWUFPbkIsQ0FBQSxFQUFVLDRCQVdULENBQUEsaUJBU0UsU0FDRixDQUFBLFFBQWUsU0FBQSxDQUFBLFlBQ2YseUJBU0EsbUJBUUEsQ0FBQSxTQUFZLGdCQVNaLENBQUEsSUFBVyxpQkFDSCxDQUFBLEdBT1YsY0FDYyxlQUNMLENBQUEsS0FPVCxnQkFDYSxVQU9iLENBQUssTUFFSCxtQkFDQSxDQUFBLFFBQ0EsY0FBVSxjQUNWLGtCQUlBLHVCQUlRLENBQUEsSUFBQSxVQVdSLENBQUEsSUFBUSxjQU9GLENBQUEsSUFDTixRQUFVLENBQUEsZUFXVixlQU9GLENBQUEsT0FDRSxlQUFp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RUZnQixjQ01aLFVBQUEsQ0FBQSwwQkNQRSxLQUFBLGNBQ0EsaUJBQ08sa0JIOENULENBQUEsV0Q3Q0osWUdJSSxjQUFBLFVBQUEsQ0FBQSxDQUFBLDBCQ1BFLEtBQUEsY0FDQSxpQkFDTyxrQkg4Q1QsQ0FBQSxXRDdDSixZR0lJLGNBQUEsVUFBQSxDQUFBLENBQUEsMEJDUkEsS0FDRSxjQUNBLGlCQUNPLGtCSDhDVCxDQUFBLFdEN0NKLFlHSUksY0FBQSxVQUFBLENBQUEsQ0FBQSxpQkppRWtCLDBCQUNILHFCQUNqQixjQUFlLDRGQ3BEYiw0QkFBQSxDQUFBLHlGQU1nQixjQUFjLDBGQUs1QixDQUFBLGtCQUFBLDRCQUFBLG9CQUFBLHVCQVNKLENBQUEsR0FBQSxtQkhyQ1EsQ0FBQSxHR3NDUixtQkFDQSxDQUFBLEdBQUEsbUJBQVksQ0FBQSxHQUdkLG1CQUNhLENBQUEsR0FHYixpQkFDYSxDQUFBLEdBQUEsYUFJWCxDQUFBLEVBQVcsY0FJWCxZQUFXLENBQUEsSUFBQSxVQUlYLENBQUEsUUFBVyxrQkFJWCxDQUFXLGNBSVgsa0JBQ1ksQ0FBQSxHQUdkLG9CQUlBLENBQUEsR0FDRSxrQkFBWSxDQUdkOzs7R0szRkEsVUFDRSxjQUFjLENBQUEsYUFHTixnQkFDSSwrQkFDRyxDQUFBLDJCQUNMLDRCQUNJLENBQUEsYUFJTix1RFJMRSxxQlFPTSx5QkFDQSxtQkFDTCxDQUFBLGFBR2IsWUFDRSxDQUFBIiwiZmlsZSI6InN0eWxlcy5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlXG4gKiBDZW50cmFsaXplIHlvdXIgaW1wb3J0cyBoZXJlLlxuICogU3R5bGVzIGFyZSBvcmdhbml6ZWQgdXNpbmcgdGhlIFNNQUNTUyB0ZWNobmlxdWUuXG4gKiBAc2VlIGh0dHA6Ly9zbWFjc3MuY29tL2Jvb2svXG4gKi9cblxuLyogSW1wb3J0IERlcGVuZGFuY2llcyAqL1xuLy9AaW1wb3J0IFwiL3BhdGgvdG8vZXhhbXBsZVwiO1xuQGltcG9ydCBcIi4uL3BhY2thZ2VzL2JyZWFrcG9pbnQtc2Fzcy9zdHlsZXNoZWV0cy9icmVha3BvaW50XCI7XG5AaW1wb3J0IFwiLi4vcGFja2FnZXMvbW9kdWxhci1zY2FsZS9zdHlsZXNoZWV0cy9tb2R1bGFyLXNjYWxlXCI7XG5AaW1wb3J0IFwiLi4vcGFja2FnZXMvc3VzeS9zYXNzL3N1c3lcIjtcblxuLyogSW1wb3J0IHdlYmZvbnRzICovXG5AaW1wb3J0IFwiLi4vd2ViZm9udHMvdGllbXBvcy90aWVtcG9zLmNzc1wiO1xuXG4vKiBJbXBvcnQgU2FzcyB2YXJpYWJsZXMsIGV0Yy4gKi9cbkBpbXBvcnQgXCJpbml0XCI7XG5cbi8qIEFkZHJlc3MgaW5jb25zaXN0ZW50IGNyb3NzLWJyb3dzZXIgZGVmYXVsdHMgKi9cbkBpbXBvcnQgXCJub3JtYWxpemVcIjtcblxuLyogSW1wb3J0IHN0eWxlcyBmb3IgY29kZSBleGFtcGxlcyAqL1xuQGltcG9ydCBcInN5bnRheC1oaWdobGlnaHRcIjtcblxuLyogSW1wb3J0IG1peGlucyBhbmQgZXh0ZW5kcyAqL1xuQGltcG9ydCBcIm1peGlucy1leHRlbmRzXCI7XG5cbi8qIEltcG9ydCBIVE1MIGVsZW1lbnQgcnVsZXMgKFNNQUNTUyBiYXNlKSAqL1xuQGltcG9ydCBcImJhc2VcIjtcblxuLyogSW1wb3J0IGNvbXBvbmVudCBydWxlcyAoU01BQ1NTIG1vZHVsZSkgKi9cbi8vQGltcG9ydCBcImNvbXBvbmVudHMvY29tcG9uZW50LXBhcnRpYWxcIjtcbkBpbXBvcnQgXCJjb21wb25lbnRzL3Bvc3RMaXN0XCI7XG5cbi8qIExheW91dCBydWxlcyAqL1xuLy9AaW1wb3J0IFwibGF5b3V0cy9sLWxheW91dC1wYXJ0aWFsXCI7XG4iLCIvKiEgbm9ybWFsaXplLmNzcyB2My4wLjIgfCBNSVQgTGljZW5zZSB8IGdpdC5pby9ub3JtYWxpemUgKi9cblxuLyoqXG4gKiAgUHJldmVudCBpT1MgdGV4dCBzaXplIGFkanVzdCBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2UsIHdpdGhvdXQgZGlzYWJsaW5nXG4gKiAgdXNlciB6b29tLlxuICovXG5cbmh0bWwge1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDsgLyogY3Jpc3BlciB0eXBlICovXG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7IC8qIGNyaXNwZXIgdHlwZSAqL1xuICB0ZXh0LXJlbmRlcmluZzogb3B0aW1pemVMZWdpYmlsaXR5OyAvKiBiZXR0ZXIga2VybmluZyBwYWlycyBhbmQgbGlnYXR1cmVzICovXG4gIGZvbnQtZmVhdHVyZS1zZXR0aW5nczogXCJrZXJuXCI7XG4gIC13ZWJraXQtZm9udC1mZWF0dXJlLXNldHRpbmdzOiBcImtlcm5cIjtcbiAgLW1vei1mb250LWZlYXR1cmUtc2V0dGluZ3M6IFwia2VyblwiO1xuICAtbW96LWZvbnQtZmVhdHVyZS1zZXR0aW5nczogXCJrZXJuPTFcIjtcbiAgZm9udC1mZWF0dXJlLXNldHRpbmdzOiBcImtlcm5cIiAxO1xuICBmb250LWtlcm5pbmc6IG5vcm1hbDtcbiAgZm9udC1mZWF0dXJlLXNldHRpbmdzOiBcImxpZ2FcIiBvbjtcbiAgZm9udC1mZWF0dXJlLXNldHRpbmdzOiBcImNvbnRleHR1YWxcIjtcbn1cblxuLyoqXG4gKiBSZW1vdmUgZGVmYXVsdCBtYXJnaW4uXG4gKi9cblxuYm9keSB7XG4gIG1hcmdpbjogMDtcbn1cblxuLyogSFRNTDUgZGlzcGxheSBkZWZpbml0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYW55IEhUTUw1IGVsZW1lbnQgaW4gSUUgOC85LlxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGBkZXRhaWxzYCBvciBgc3VtbWFyeWAgaW4gSUUgMTAvMTFcbiAqIGFuZCBGaXJlZm94LlxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGBtYWluYCBpbiBJRSAxMS5cbiAqL1xuXG5hcnRpY2xlLFxuYXNpZGUsXG5kZXRhaWxzLFxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbmhncm91cCxcbm1haW4sXG5tZW51LFxubmF2LFxuc2VjdGlvbixcbnN1bW1hcnkge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IGBpbmxpbmUtYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgaW4gSUUgOC85LlxuICogMi4gTm9ybWFsaXplIHZlcnRpY2FsIGFsaWdubWVudCBvZiBgcHJvZ3Jlc3NgIGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5cbmF1ZGlvLFxuY2FudmFzLFxucHJvZ3Jlc3MsXG52aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jazsgLyogMSAqL1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBQcmV2ZW50IG1vZGVybiBicm93c2VycyBmcm9tIGRpc3BsYXlpbmcgYGF1ZGlvYCB3aXRob3V0IGNvbnRyb2xzLlxuICogUmVtb3ZlIGV4Y2VzcyBoZWlnaHQgaW4gaU9TIDUgZGV2aWNlcy5cbiAqL1xuXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7XG59XG5cbi8qKlxuICogQWRkcmVzcyBgW2hpZGRlbl1gIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LzEwLlxuICogSGlkZSB0aGUgYHRlbXBsYXRlYCBlbGVtZW50IGluIElFIDgvOS8xMSwgU2FmYXJpLCBhbmQgRmlyZWZveCA8IDIyLlxuICovXG5cbltoaWRkZW5dLFxudGVtcGxhdGUge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4vKiBMaW5rc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBjb2xvciBmcm9tIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbi8qKlxuICogSW1wcm92ZSByZWFkYWJpbGl0eSB3aGVuIGZvY3VzZWQgYW5kIGFsc28gbW91c2UgaG92ZXJlZCBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuYTphY3RpdmUsXG5hOmhvdmVyIHtcbiAgb3V0bGluZTogMDtcbn1cblxuLyoqXG4gKiBSZW1vdmVzIGRlZmF1bHQgZnV6enkgd2Via2l0IGJvcmRlci5cbiAqIFNwZWMgYW4gYWx0ZXJuYXRpdmUgaW4gdGhlIGxpbmsgc3R5bGVzLlxuICovXG5cbmE6Zm9jdXMge1xuICBvdXRsaW5lOiAwO1xufVxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS8xMC8xMSwgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IGRvdHRlZDtcbiAgbGV0dGVyLXNwYWNpbmc6IC4xZW07XG59XG5cbi8qKlxuICogQWRkcmVzcyBzdHlsZSBzZXQgdG8gYGJvbGRlcmAgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gU2FmYXJpIGFuZCBDaHJvbWUuXG4gKi9cblxuZGZuIHtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgdmFyaWFibGUgYGgxYCBmb250LXNpemUgYW5kIG1hcmdpbiB3aXRoaW4gYHNlY3Rpb25gIGFuZCBgYXJ0aWNsZWBcbiAqIGNvbnRleHRzIGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwO1xufVxuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkuXG4gKi9cblxubWFyayB7XG4gIGJhY2tncm91bmQ6ICNmZjA7XG4gIGNvbG9yOiAjMDAwO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgaW5jb25zaXN0ZW50IGFuZCB2YXJpYWJsZSBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnNtYWxsIHtcbiAgZm9udC1zaXplOiBtcygtMyk7XG59XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgYWZmZWN0aW5nIGBsaW5lLWhlaWdodGAgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtO1xufVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07XG59XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIGJvcmRlciB3aGVuIGluc2lkZSBgYWAgZWxlbWVudCBpbiBJRSA4LzkvMTAuXG4gKi9cblxuaW1nIHtcbiAgYm9yZGVyOiAwO1xufVxuXG4vKipcbiAqIENvcnJlY3Qgb3ZlcmZsb3cgbm90IGhpZGRlbiBpbiBJRSA5LzEwLzExLlxuICovXG5cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBZGRyZXNzIG1hcmdpbiBub3QgcHJlc2VudCBpbiBJRSA4LzkgYW5kIFNhZmFyaS5cbiAqL1xuXG5maWd1cmUge1xuICBtYXJnaW46IDFlbSA0MHB4O1xufVxuXG4vKipcbiAqIEFkZHJlc3MgZGlmZmVyZW5jZXMgYmV0d2VlbiBGaXJlZm94IGFuZCBvdGhlciBicm93c2Vycy5cbiAqL1xuXG5ociB7XG4gIC1tb3otYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICBoZWlnaHQ6IDA7XG59XG5cbi8qKlxuICogQ29udGFpbiBvdmVyZmxvdyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxucHJlIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi8qKlxuICogQWRkcmVzcyBvZGQgYGVtYC11bml0IGZvbnQgc2l6ZSByZW5kZXJpbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmNvZGUsXG5rYmQsXG5wcmUsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6ICRtb25vc3BhY2U7XG4gIGZvbnQtc2l6ZTogbXMoLTEpO1xufVxuXG5jb2RlLFxua2JkLFxuc2FtcCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoJGdyYXktZGFya2VzdCwgLjA1KTtcbiAgcGFkZGluZzogLjMyNWVtIC41ZW07XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbn1cblxuZGVsIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBsaW5lLXRocm91Z2ggZG90dGVkO1xufVxuXG5pbnMge1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7XG59XG5cbnMge1xuICB0ZXh0LWRlY29yYXRpb246IGxpbmUtdGhyb3VnaCBkb3R0ZWQ7XG59XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEtub3duIGxpbWl0YXRpb246IGJ5IGRlZmF1bHQsIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFggYWxsb3cgdmVyeSBsaW1pdGVkXG4gKiBzdHlsaW5nIG9mIGBzZWxlY3RgLCB1bmxlc3MgYSBgYm9yZGVyYCBwcm9wZXJ0eSBpcyBzZXQuXG4gKi9cblxuLyoqXG4gKiAxLiBDb3JyZWN0IGNvbG9yIG5vdCBiZWluZyBpbmhlcml0ZWQuXG4gKiAgICBLbm93biBpc3N1ZTogYWZmZWN0cyBjb2xvciBvZiBkaXNhYmxlZCBlbGVtZW50cy5cbiAqIDIuIENvcnJlY3QgZm9udCBwcm9wZXJ0aWVzIG5vdCBiZWluZyBpbmhlcml0ZWQuXG4gKiAzLiBBZGRyZXNzIG1hcmdpbnMgc2V0IGRpZmZlcmVudGx5IGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBjb2xvcjogaW5oZXJpdDsgLyogMSAqL1xuICBmb250OiBpbmhlcml0OyAvKiAyICovXG4gIG1hcmdpbjogMDsgLyogMyAqL1xufVxuXG4vKipcbiAqIEFkZHJlc3MgYG92ZXJmbG93YCBzZXQgdG8gYGhpZGRlbmAgaW4gSUUgOC85LzEwLzExLlxuICovXG5cbmJ1dHRvbiB7XG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgaW5jb25zaXN0ZW50IGB0ZXh0LXRyYW5zZm9ybWAgaW5oZXJpdGFuY2UgZm9yIGBidXR0b25gIGFuZCBgc2VsZWN0YC5cbiAqIEFsbCBvdGhlciBmb3JtIGNvbnRyb2wgZWxlbWVudHMgZG8gbm90IGluaGVyaXQgYHRleHQtdHJhbnNmb3JtYCB2YWx1ZXMuXG4gKiBDb3JyZWN0IGBidXR0b25gIHN0eWxlIGluaGVyaXRhbmNlIGluIEZpcmVmb3gsIElFIDgvOS8xMC8xMSwgYW5kIE9wZXJhLlxuICogQ29ycmVjdCBgc2VsZWN0YCBzdHlsZSBpbmhlcml0YW5jZSBpbiBGaXJlZm94LlxuICovXG5cbmJ1dHRvbixcbnNlbGVjdCB7XG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xufVxuXG4vKipcbiAqIDEuIEF2b2lkIHRoZSBXZWJLaXQgYnVnIGluIEFuZHJvaWQgNC4wLiogd2hlcmUgKDIpIGRlc3Ryb3lzIG5hdGl2ZSBgYXVkaW9gXG4gKiAgICBhbmQgYHZpZGVvYCBjb250cm9scy5cbiAqIDIuIENvcnJlY3QgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSBgaW5wdXRgIHR5cGVzIGluIGlPUy5cbiAqIDMuIEltcHJvdmUgdXNhYmlsaXR5IGFuZCBjb25zaXN0ZW5jeSBvZiBjdXJzb3Igc3R5bGUgYmV0d2VlbiBpbWFnZS10eXBlXG4gKiAgICBgaW5wdXRgIGFuZCBvdGhlcnMuXG4gKi9cblxuYnV0dG9uLFxuaHRtbCBpbnB1dFt0eXBlPVwiYnV0dG9uXCJdLCAvKiAxICovXG5pbnB1dFt0eXBlPVwicmVzZXRcIl0sXG5pbnB1dFt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDIgKi9cbiAgY3Vyc29yOiBwb2ludGVyOyAvKiAzICovXG59XG5cbi8qKlxuICogUmUtc2V0IGRlZmF1bHQgY3Vyc29yIGZvciBkaXNhYmxlZCBlbGVtZW50cy5cbiAqL1xuXG5idXR0b25bZGlzYWJsZWRdLFxuaHRtbCBpbnB1dFtkaXNhYmxlZF0ge1xuICBjdXJzb3I6IGRlZmF1bHQ7XG59XG5cbi8qKlxuICogUmVtb3ZlIGlubmVyIHBhZGRpbmcgYW5kIGJvcmRlciBpbiBGaXJlZm94IDQrLlxuICovXG5cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcbmlucHV0OjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgRmlyZWZveCA0KyBzZXR0aW5nIGBsaW5lLWhlaWdodGAgb24gYGlucHV0YCB1c2luZyBgIWltcG9ydGFudGAgaW5cbiAqIHRoZSBVQSBzdHlsZXNoZWV0LlxuICovXG5cbmlucHV0IHtcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDtcbn1cblxuLyoqXG4gKiBJdCdzIHJlY29tbWVuZGVkIHRoYXQgeW91IGRvbid0IGF0dGVtcHQgdG8gc3R5bGUgdGhlc2UgZWxlbWVudHMuXG4gKiBGaXJlZm94J3MgaW1wbGVtZW50YXRpb24gZG9lc24ndCByZXNwZWN0IGJveC1zaXppbmcsIHBhZGRpbmcsIG9yIHdpZHRoLlxuICpcbiAqIDEuIEFkZHJlc3MgYm94IHNpemluZyBzZXQgdG8gYGNvbnRlbnQtYm94YCBpbiBJRSA4LzkvMTAuXG4gKiAyLiBSZW1vdmUgZXhjZXNzIHBhZGRpbmcgaW4gSUUgOC85LzEwLlxuICovXG5cbmlucHV0W3R5cGU9XCJjaGVja2JveFwiXSxcbmlucHV0W3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIEZpeCB0aGUgY3Vyc29yIHN0eWxlIGZvciBDaHJvbWUncyBpbmNyZW1lbnQvZGVjcmVtZW50IGJ1dHRvbnMuIEZvciBjZXJ0YWluXG4gKiBgZm9udC1zaXplYCB2YWx1ZXMgb2YgdGhlIGBpbnB1dGAsIGl0IGNhdXNlcyB0aGUgY3Vyc29yIHN0eWxlIG9mIHRoZVxuICogZGVjcmVtZW50IGJ1dHRvbiB0byBjaGFuZ2UgZnJvbSBgZGVmYXVsdGAgdG8gYHRleHRgLlxuICovXG5cbmlucHV0W3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5pbnB1dFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIEFkZHJlc3MgYGFwcGVhcmFuY2VgIHNldCB0byBgc2VhcmNoZmllbGRgIGluIFNhZmFyaSBhbmQgQ2hyb21lLlxuICogMi4gQWRkcmVzcyBgYm94LXNpemluZ2Agc2V0IHRvIGBib3JkZXItYm94YCBpbiBTYWZhcmkgYW5kIENocm9tZVxuICogICAgKGluY2x1ZGUgYC1tb3pgIHRvIGZ1dHVyZS1wcm9vZikuXG4gKi9cblxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXG4gIC1tb3otYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIC13ZWJraXQtYm94LXNpemluZzogY29udGVudC1ib3g7IC8qIDIgKi9cbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG59XG5cbi8qKlxuICogUmVtb3ZlIGlubmVyIHBhZGRpbmcgYW5kIHNlYXJjaCBjYW5jZWwgYnV0dG9uIGluIFNhZmFyaSBhbmQgQ2hyb21lIG9uIE9TIFguXG4gKiBTYWZhcmkgKGJ1dCBub3QgQ2hyb21lKSBjbGlwcyB0aGUgY2FuY2VsIGJ1dHRvbiB3aGVuIHRoZSBzZWFyY2ggaW5wdXQgaGFzXG4gKiBwYWRkaW5nIChhbmQgYHRleHRmaWVsZGAgYXBwZWFyYW5jZSkuXG4gKi9cblxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG59XG5cbi8qKlxuICogRGVmaW5lIGNvbnNpc3RlbnQgYm9yZGVyLCBtYXJnaW4sIGFuZCBwYWRkaW5nLlxuICovXG5cbmZpZWxkc2V0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2MwYzBjMDtcbiAgbWFyZ2luOiAwIDJweDtcbiAgcGFkZGluZzogMC4zNWVtIDAuNjI1ZW0gMC43NWVtO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgYGNvbG9yYCBub3QgYmVpbmcgaW5oZXJpdGVkIGluIElFIDgvOS8xMC8xMS5cbiAqIDIuIFJlbW92ZSBwYWRkaW5nIHNvIHBlb3BsZSBhcmVuJ3QgY2F1Z2h0IG91dCBpZiB0aGV5IHplcm8gb3V0IGZpZWxkc2V0cy5cbiAqL1xuXG5sZWdlbmQge1xuICBib3JkZXI6IDA7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRSA4LzkvMTAvMTEuXG4gKi9cblxudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiBEb24ndCBpbmhlcml0IHRoZSBgZm9udC13ZWlnaHRgIChhcHBsaWVkIGJ5IGEgcnVsZSBhYm92ZSkuXG4gKiBOT1RFOiB0aGUgZGVmYXVsdCBjYW5ub3Qgc2FmZWx5IGJlIGNoYW5nZWQgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWC5cbiAqL1xuXG5vcHRncm91cCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4vKiBUYWJsZXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIG1vc3Qgc3BhY2luZyBiZXR3ZWVuIHRhYmxlIGNlbGxzLlxuICovXG5cbnRhYmxlIHtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgYm9yZGVyLXNwYWNpbmc6IDA7XG59XG5cbnRkLFxudGgge1xuICBwYWRkaW5nOiAwO1xufVxuIiwiLyoqXG4gKiBAZmlsZVxuICogSW5pdGlhbGl6YXRpb24gcGFydGlhbC5cbiAqIERlY2xhcmUgZm9udCBzdGFja3MsIHZhcmlhYmxlcywgZXRjLlxuICovXG5cbi8vIEZvbnQgU3RhY2tzXG4kdGltZXMtbmV3LXJvbWFuOiBcIlRpbWVzIE5ldyBSb21hblwiLCBUaW1lcywgR2VvcmdpYSwgXCJEZWphVnUgU2VyaWZcIiwgc2VyaWY7XG4kdGltZXM6IFRpbWVzLCBcIlRpbWVzIE5ldyBSb21hblwiLCBHZW9yZ2lhLCBcIkRlamFWdSBTZXJpZlwiLCBzZXJpZjtcbiRnZW9yZ2lhOiBHZW9yZ2lhLCBcIlRpbWVzIE5ldyBSb21hblwiLCBcIkRlamFWdSBTZXJpZlwiLCBzZXJpZjtcbiR2ZXJkYW5hOiBWZXJkYW5hLCBUYWhvbWEsIFwiRGVqYVZ1IFNhbnNcIiwgc2Fucy1zZXJpZjtcbiR0YWhvbWE6IFRhaG9tYSwgVmVyZGFuYSwgXCJEZWphVnUgU2Fuc1wiLCBzYW5zLXNlcmlmO1xuJGhlbHZldGljYTogSGVsdmV0aWNhLCBBcmlhbCwgXCJOaW1idXMgU2FucyBMXCIsIHNhbnMtc2VyaWY7XG4kYXJpYWw6IEFyaWFsLCBIZWx2ZXRpY2EsIFwiTmltYnVzIFNhbnMgTFwiLCBzYW5zLXNlcmlmO1xuJG1vbm9zcGFjZTogXCJMdWNpZGEgU2FucyBUeXBld3JpdGVyXCIsIFwiQ291cmllciBOZXdcIiwgQ29uc29sYXMsXCJBbmRhbGUgTW9ub1wiLCBcIkx1Y2lkYSBDb25zb2xlXCIsIG1vbm9zcGFjZTtcbiRzYW5zOiAkaGVsdmV0aWNhO1xuJHNlcmlmOiBUaWVtcG9zVGV4dCwgJGdlb3JnaWE7XG4kZGlzcGxheTogVGllbXBvc0hlYWRsaW5lO1xuXG4vLyBUeXBlIERlZmluaXRpb25cbiRiYXNlLWZvbnQtZmFtaWx5OiAkc2VyaWY7XG4kbXMtYmFzZTogMWVtO1xuJG1zLXJhdGlvOiAkbWFqb3Itc2Vjb25kO1xuXG4vLyBDb2xvciBEZWZpbml0aW9uXG4kZ3JheS1kYXJrZXN0OiAjMzMzO1xuJGdyYXktZGFyazogIzY2NjtcbiRncmF5LW1lZGl1bTogI2FhYTtcbiRncmF5LWxpZ2h0OiAjZWVlO1xuJG9mZi13aGl0ZTogI2ZiZmJmYjtcbiRibHVlLWxpZ2h0OiAjMDA3N2RkO1xuXG4vLyBDb2xvciBWYXJpYWJsZXNcbiR0ZXh0LWNvbG9yOiAkZ3JheS1kYXJrZXN0O1xuJGJhY2tncm91bmQtY29sb3I6ICRncmF5LWxpZ2h0O1xuJGFjdGl2ZS1jb2xvcjogJGJsdWUtbGlnaHQ7XG4kYWN0aXZlLWhvdmVyLWNvbG9yOiBkYXJrZW4oJGFjdGl2ZS1jb2xvciwgMjAlKTtcbiIsIi8qKlxuICogU3ludGF4IGhpZ2hsaWdodGluZyBzdHlsZXNcbiAqL1xuLmhpZ2hsaWdodCAgeyB9XG4uaGlnaGxpZ2h0IC5jIHsgY29sb3I6ICM5OTk5ODg7IGZvbnQtc3R5bGU6IGl0YWxpYyB9IC8qIENvbW1lbnQgKi9cbi5oaWdobGlnaHQgLmVyciB7IGNvbG9yOiAjYTYxNzE3OyBiYWNrZ3JvdW5kLWNvbG9yOiAjZTNkMmQyIH0gLyogRXJyb3IgKi9cbi5oaWdobGlnaHQgLmsgeyBmb250LXdlaWdodDogYm9sZCB9IC8qIEtleXdvcmQgKi9cbi5oaWdobGlnaHQgLm8geyBmb250LXdlaWdodDogYm9sZCB9IC8qIE9wZXJhdG9yICovXG4uaGlnaGxpZ2h0IC5jbSB7IGNvbG9yOiAjOTk5OTg4OyBmb250LXN0eWxlOiBpdGFsaWMgfSAvKiBDb21tZW50Lk11bHRpbGluZSAqL1xuLmhpZ2hsaWdodCAuY3AgeyBjb2xvcjogIzk5OTk5OTsgZm9udC13ZWlnaHQ6IGJvbGQgfSAvKiBDb21tZW50LlByZXByb2MgKi9cbi5oaWdobGlnaHQgLmMxIHsgY29sb3I6ICM5OTk5ODg7IGZvbnQtc3R5bGU6IGl0YWxpYyB9IC8qIENvbW1lbnQuU2luZ2xlICovXG4uaGlnaGxpZ2h0IC5jcyB7IGNvbG9yOiAjOTk5OTk5OyBmb250LXdlaWdodDogYm9sZDsgZm9udC1zdHlsZTogaXRhbGljIH0gLyogQ29tbWVudC5TcGVjaWFsICovXG4uaGlnaGxpZ2h0IC5nZCB7IGNvbG9yOiAjMDAwMDAwOyBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZkZGRkIH0gLyogR2VuZXJpYy5EZWxldGVkICovXG4uaGlnaGxpZ2h0IC5nZCAueCB7IGNvbG9yOiAjMDAwMDAwOyBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZhYWFhIH0gLyogR2VuZXJpYy5EZWxldGVkLlNwZWNpZmljICovXG4uaGlnaGxpZ2h0IC5nZSB7IGZvbnQtc3R5bGU6IGl0YWxpYyB9IC8qIEdlbmVyaWMuRW1waCAqL1xuLmhpZ2hsaWdodCAuZ3IgeyBjb2xvcjogI2FhMDAwMCB9IC8qIEdlbmVyaWMuRXJyb3IgKi9cbi5oaWdobGlnaHQgLmdoIHsgY29sb3I6ICM5OTk5OTkgfSAvKiBHZW5lcmljLkhlYWRpbmcgKi9cbi5oaWdobGlnaHQgLmdpIHsgY29sb3I6ICMwMDAwMDA7IGJhY2tncm91bmQtY29sb3I6ICNkZGZmZGQgfSAvKiBHZW5lcmljLkluc2VydGVkICovXG4uaGlnaGxpZ2h0IC5naSAueCB7IGNvbG9yOiAjMDAwMDAwOyBiYWNrZ3JvdW5kLWNvbG9yOiAjYWFmZmFhIH0gLyogR2VuZXJpYy5JbnNlcnRlZC5TcGVjaWZpYyAqL1xuLmhpZ2hsaWdodCAuZ28geyBjb2xvcjogIzg4ODg4OCB9IC8qIEdlbmVyaWMuT3V0cHV0ICovXG4uaGlnaGxpZ2h0IC5ncCB7IGNvbG9yOiAjNTU1NTU1IH0gLyogR2VuZXJpYy5Qcm9tcHQgKi9cbi5oaWdobGlnaHQgLmdzIHsgZm9udC13ZWlnaHQ6IGJvbGQgfSAvKiBHZW5lcmljLlN0cm9uZyAqL1xuLmhpZ2hsaWdodCAuZ3UgeyBjb2xvcjogI2FhYWFhYSB9IC8qIEdlbmVyaWMuU3ViaGVhZGluZyAqL1xuLmhpZ2hsaWdodCAuZ3QgeyBjb2xvcjogI2FhMDAwMCB9IC8qIEdlbmVyaWMuVHJhY2ViYWNrICovXG4uaGlnaGxpZ2h0IC5rYyB7IGZvbnQtd2VpZ2h0OiBib2xkIH0gLyogS2V5d29yZC5Db25zdGFudCAqL1xuLmhpZ2hsaWdodCAua2QgeyBmb250LXdlaWdodDogYm9sZCB9IC8qIEtleXdvcmQuRGVjbGFyYXRpb24gKi9cbi5oaWdobGlnaHQgLmtwIHsgZm9udC13ZWlnaHQ6IGJvbGQgfSAvKiBLZXl3b3JkLlBzZXVkbyAqL1xuLmhpZ2hsaWdodCAua3IgeyBmb250LXdlaWdodDogYm9sZCB9IC8qIEtleXdvcmQuUmVzZXJ2ZWQgKi9cbi5oaWdobGlnaHQgLmt0IHsgY29sb3I6ICM0NDU1ODg7IGZvbnQtd2VpZ2h0OiBib2xkIH0gLyogS2V5d29yZC5UeXBlICovXG4uaGlnaGxpZ2h0IC5tIHsgY29sb3I6ICMwMDk5OTkgfSAvKiBMaXRlcmFsLk51bWJlciAqL1xuLmhpZ2hsaWdodCAucyB7IGNvbG9yOiAjZDE0IH0gLyogTGl0ZXJhbC5TdHJpbmcgKi9cbi5oaWdobGlnaHQgLm5hIHsgY29sb3I6ICMwMDgwODAgfSAvKiBOYW1lLkF0dHJpYnV0ZSAqL1xuLmhpZ2hsaWdodCAubmIgeyBjb2xvcjogIzAwODZCMyB9IC8qIE5hbWUuQnVpbHRpbiAqL1xuLmhpZ2hsaWdodCAubmMgeyBjb2xvcjogIzQ0NTU4ODsgZm9udC13ZWlnaHQ6IGJvbGQgfSAvKiBOYW1lLkNsYXNzICovXG4uaGlnaGxpZ2h0IC5ubyB7IGNvbG9yOiAjMDA4MDgwIH0gLyogTmFtZS5Db25zdGFudCAqL1xuLmhpZ2hsaWdodCAubmkgeyBjb2xvcjogIzgwMDA4MCB9IC8qIE5hbWUuRW50aXR5ICovXG4uaGlnaGxpZ2h0IC5uZSB7IGNvbG9yOiAjOTkwMDAwOyBmb250LXdlaWdodDogYm9sZCB9IC8qIE5hbWUuRXhjZXB0aW9uICovXG4uaGlnaGxpZ2h0IC5uZiB7IGNvbG9yOiAjOTkwMDAwOyBmb250LXdlaWdodDogYm9sZCB9IC8qIE5hbWUuRnVuY3Rpb24gKi9cbi5oaWdobGlnaHQgLm5uIHsgY29sb3I6ICM1NTU1NTUgfSAvKiBOYW1lLk5hbWVzcGFjZSAqL1xuLmhpZ2hsaWdodCAubnQgeyBjb2xvcjogIzAwMDA4MCB9IC8qIE5hbWUuVGFnICovXG4uaGlnaGxpZ2h0IC5udiB7IGNvbG9yOiAjMDA4MDgwIH0gLyogTmFtZS5WYXJpYWJsZSAqL1xuLmhpZ2hsaWdodCAub3cgeyBmb250LXdlaWdodDogYm9sZCB9IC8qIE9wZXJhdG9yLldvcmQgKi9cbi5oaWdobGlnaHQgLncgeyBjb2xvcjogI2JiYmJiYiB9IC8qIFRleHQuV2hpdGVzcGFjZSAqL1xuLmhpZ2hsaWdodCAubWYgeyBjb2xvcjogIzAwOTk5OSB9IC8qIExpdGVyYWwuTnVtYmVyLkZsb2F0ICovXG4uaGlnaGxpZ2h0IC5taCB7IGNvbG9yOiAjMDA5OTk5IH0gLyogTGl0ZXJhbC5OdW1iZXIuSGV4ICovXG4uaGlnaGxpZ2h0IC5taSB7IGNvbG9yOiAjMDA5OTk5IH0gLyogTGl0ZXJhbC5OdW1iZXIuSW50ZWdlciAqL1xuLmhpZ2hsaWdodCAubW8geyBjb2xvcjogIzAwOTk5OSB9IC8qIExpdGVyYWwuTnVtYmVyLk9jdCAqL1xuLmhpZ2hsaWdodCAuc2IgeyBjb2xvcjogI2QxNCB9IC8qIExpdGVyYWwuU3RyaW5nLkJhY2t0aWNrICovXG4uaGlnaGxpZ2h0IC5zYyB7IGNvbG9yOiAjZDE0IH0gLyogTGl0ZXJhbC5TdHJpbmcuQ2hhciAqL1xuLmhpZ2hsaWdodCAuc2QgeyBjb2xvcjogI2QxNCB9IC8qIExpdGVyYWwuU3RyaW5nLkRvYyAqL1xuLmhpZ2hsaWdodCAuczIgeyBjb2xvcjogI2QxNCB9IC8qIExpdGVyYWwuU3RyaW5nLkRvdWJsZSAqL1xuLmhpZ2hsaWdodCAuc2UgeyBjb2xvcjogI2QxNCB9IC8qIExpdGVyYWwuU3RyaW5nLkVzY2FwZSAqL1xuLmhpZ2hsaWdodCAuc2ggeyBjb2xvcjogI2QxNCB9IC8qIExpdGVyYWwuU3RyaW5nLkhlcmVkb2MgKi9cbi5oaWdobGlnaHQgLnNpIHsgY29sb3I6ICNkMTQgfSAvKiBMaXRlcmFsLlN0cmluZy5JbnRlcnBvbCAqL1xuLmhpZ2hsaWdodCAuc3ggeyBjb2xvcjogI2QxNCB9IC8qIExpdGVyYWwuU3RyaW5nLk90aGVyICovXG4uaGlnaGxpZ2h0IC5zciB7IGNvbG9yOiAjMDA5OTI2IH0gLyogTGl0ZXJhbC5TdHJpbmcuUmVnZXggKi9cbi5oaWdobGlnaHQgLnMxIHsgY29sb3I6ICNkMTQgfSAvKiBMaXRlcmFsLlN0cmluZy5TaW5nbGUgKi9cbi5oaWdobGlnaHQgLnNzIHsgY29sb3I6ICM5OTAwNzMgfSAvKiBMaXRlcmFsLlN0cmluZy5TeW1ib2wgKi9cbi5oaWdobGlnaHQgLmJwIHsgY29sb3I6ICM5OTk5OTkgfSAvKiBOYW1lLkJ1aWx0aW4uUHNldWRvICovXG4uaGlnaGxpZ2h0IC52YyB7IGNvbG9yOiAjMDA4MDgwIH0gLyogTmFtZS5WYXJpYWJsZS5DbGFzcyAqL1xuLmhpZ2hsaWdodCAudmcgeyBjb2xvcjogIzAwODA4MCB9IC8qIE5hbWUuVmFyaWFibGUuR2xvYmFsICovXG4uaGlnaGxpZ2h0IC52aSB7IGNvbG9yOiAjMDA4MDgwIH0gLyogTmFtZS5WYXJpYWJsZS5JbnN0YW5jZSAqL1xuLmhpZ2hsaWdodCAuaWwgeyBjb2xvcjogIzAwOTk5OSB9IC8qIExpdGVyYWwuTnVtYmVyLkludGVnZXIuTG9uZyAqL1xuIiwiLyoqXG4gKiBAZmlsZVxuICogRGVmaW5lIHlvdXIgY3VzdG9tIFNhc3MgbWl4aW5zIGFuZCBleHRlbmRzIGhlcmUuXG4gKiBAc2VlIGh0dHA6Ly9zYXNzLWxhbmcuY29tL2RvY3MveWFyZG9jL2ZpbGUuU0FTU19SRUZFUkVOQ0UuaHRtbCNkZWZpbmluZ19hX21peGluXG4gKi9cblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgIFR5cG9ncmFwaHkgZ3Jvb21pbmcgZXh0ZW5kc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKiBUaWdodCB0cmFja2luZyAqL1xuJXRyYWNrLWluIHsgbGV0dGVyLXNwYWNpbmc6IC0wLjAxZW07IH1cblxuLyogT3BlbiB0cmFja2luZyAqL1xuJXRyYWNrLW91dCB7IGxldHRlci1zcGFjaW5nOiAwLjEzM2VtOyB9XG5cbi8qIFN0eWxlIGxhcmdlciB0ZXh0IHdpdGggYSB0aWdodGVyIHRyYWNraW5nLCBjaGFuZ2Ugd2VpZ2h0LCBldGMuICAqL1xuJWRpc3BsYXktdHlwZSB7IEBleHRlbmQgJXRyYWNrLWluOyB9XG5cbi8qIFN0eWxlIGFsbCBjYXBzIHdpdGggYSBzbGlnaHRseSBvcGVuIHRyYWNraW5nLiAqL1xuJWFsbGNhcHMgeyBAZXh0ZW5kICV0cmFjay1vdXQ7IHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IH1cblxuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICBDbGVhcmZpeCBleHRlbmRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFwcGxpZXMgYSBjbGVhcmZpeCBydWxlc2V0IHVzaW5nIGEgcGxhY2Vob2xkZXIgc2VsZWN0b3IuIFBsYWNlaG9sZGVyIHNlbGVjdG9yc1xuICogZG8gbm90IGdldCBjb21waWxlZCB1bGVzcyB0aGV5IGFyZSBjYWxsZWQgLSByZW1vdmluZyB0aGUgbmVzdGluZyBpc3N1ZXMgdGhhdFxuICogY2FuIG90aGVyd2lzZSBvY2N1ciB3aXRoIGV4dGVuZHMuXG4gKi9cblxuJWNsZWFyZml4IHtcbiAgJjphZnRlciB7XG4gICAgY29udGVudDogXCJcIjtcbiAgICBkaXNwbGF5OiB0YWJsZTtcbiAgICBjbGVhcjogYm90aDtcbiAgfVxufVxuXG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICBWaXN1YWxseSBoaWRkZW4gZXh0ZW5kXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogRWxlbWVudC1pbnZpc2libGUgYXMgZGVmaW5lZCBieSBzbm9vay5jYVxuICogQHNlZSBodHRwOi8vc25vb2suY2EvYXJjaGl2ZXMvaHRtbF9hbmRfY3NzL2hpZGluZy1jb250ZW50LWZvci1hY2Nlc3NpYmlsaXR5XG4gKi9cblxuLmVsZW1lbnQtaW52aXNpYmxlLFxuJWVsZW1lbnQtaW52aXNpYmxlIHtcbiAgcG9zaXRpb246IGFic29sdXRlICFpbXBvcnRhbnQ7XG4gIGhlaWdodDogMXB4O1xuICB3aWR0aDogMXB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBjbGlwOiByZWN0KDFweCwgMXB4LCAxcHgsIDFweCk7XG59XG5cbi8qIFR1cm5zIG9mZiB0aGUgZWxlbWVudC1pbnZpc2libGUgZWZmZWN0LiAqL1xuJWVsZW1lbnQtaW52aXNpYmxlLW9mZiB7XG4gIHBvc2l0aW9uOiBzdGF0aWMgIWltcG9ydGFudDtcbiAgY2xpcDogYXV0bztcbiAgaGVpZ2h0OiBhdXRvO1xuICB3aWR0aDogYXV0bztcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi5lbGVtZW50LWZvY3VzYWJsZSxcbiVlbGVtZW50LWZvY3VzYWJsZSB7XG4gIEBleHRlbmQgJWVsZW1lbnQtaW52aXNpYmxlO1xuXG4gICY6YWN0aXZlLFxuICAmOmZvY3VzIHtcbiAgICBAZXh0ZW5kICVlbGVtZW50LWludmlzaWJsZS1vZmY7XG4gIH1cbn1cblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICBUcmFuc2l0aW9uIG1peGluXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG5AbWl4aW4gdHJhbnMoJHRpbWluZywgJGVhc2luZykge1xuICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAkdGltaW5nICRlYXNpbmc7XG4gIC1tb3otdHJhbnNpdGlvbjogYWxsICR0aW1pbmcgJGVhc2luZztcbiAgLW8tdHJhbnNpdGlvbjogYWxsICR0aW1pbmcgJGVhc2luZztcbiAgdHJhbnNpdGlvbjogYWxsICR0aW1pbmcgJGVhc2luZztcbn1cbiIsImh0bWwge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmFja2dyb3VuZC1jb2xvcjtcbiAgY29sb3I6ICR0ZXh0LWNvbG9yO1xuICBmb250LWZhbWlseTogJGJhc2UtZm9udC1mYW1pbHk7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogbXMoMCk7XG4gIGxpbmUtaGVpZ2h0OiBtcyg0KTtcbiAgQGluY2x1ZGUgYnJlYWtwb2ludCgzMGVtKXtcbiAgICBmb250LXNpemU6IG1zKDEpO1xuICB9XG4gIEBpbmNsdWRlIGJyZWFrcG9pbnQoNjBlbSl7XG4gICAgZm9udC1zaXplOiBtcygyKTtcbiAgfVxufVxuXG5ib2R5IHtcbiAgQGluY2x1ZGUgY29udGFpbmVyKDkwJSk7XG4gIEBpbmNsdWRlIGJyZWFrcG9pbnQoMzBlbSl7XG4gICAgQGluY2x1ZGUgY29udGFpbmVyKDgwJSk7XG4gIH1cbiAgQGluY2x1ZGUgYnJlYWtwb2ludCg0NWVtKXtcbiAgICBAaW5jbHVkZSBjb250YWluZXIoNzAlKTtcbiAgfVxuICBAaW5jbHVkZSBicmVha3BvaW50KDYwZW0pe1xuICAgIEBpbmNsdWRlIGNvbnRhaW5lcig2MCUpO1xuICB9XG59XG5cbmE6bGluayxcbmE6dmlzaXRlZCB7XG4gIEBpbmNsdWRlIHRyYW5zKC4wOHMsIGVhc2UpO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGNvbG9yOiAkYWN0aXZlLWNvbG9yO1xuICBiYWNrZ3JvdW5kLWltYWdlOlxuICAgIGxpbmVhci1ncmFkaWVudChcbiAgICAgIHRvIHRvcCxcbiAgICAgIHJnYmEoJGFjdGl2ZS1jb2xvciwgLjQpIC4wMzNlbSxcbiAgICAgIHRyYW5zcGFyZW50IC4wMzNlbVxuICAgICk7XG4gIGJhY2tncm91bmQtcG9zaXRpb24teTogLjg3NWVtO1xuICAmOmhvdmVyLFxuICAmOmZvY3VzLFxuICAmOmFjdGl2ZSB7XG4gICAgY29sb3I6ICRhY3RpdmUtaG92ZXItY29sb3I7XG4gICAgYmFja2dyb3VuZC1pbWFnZTpcbiAgICAgIGxpbmVhci1ncmFkaWVudChcbiAgICAgICAgdG8gdG9wLFxuICAgICAgICByZ2JhKCRhY3RpdmUtaG92ZXItY29sb3IsIC40KSAuMDMzZW0sXG4gICAgICAgIHRyYW5zcGFyZW50IC4wMzNlbVxuICAgICAgKTtcbiAgfVxufVxuXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2IHtcbiAgZm9udC1mYW1pbHk6ICRkaXNwbGF5O1xuICBsaW5lLWhlaWdodDogbXMoMSk7XG4gIG1hcmdpbjogbXMoMCkgMCBtcygtNCkgMDtcbn1cblxuaDEge1xuICBmb250LXNpemU6IG1zKDUpO1xufVxuXG5oMiB7XG4gIGZvbnQtc2l6ZTogbXMoNCk7XG59XG5cbmgzIHtcbiAgZm9udC1zaXplOiBtcygzKTtcbn1cblxuaDQge1xuICBmb250LXNpemU6IG1zKDIpO1xufVxuXG5oNSB7XG4gIGZvbnQtc2l6ZTogbXMoMSk7XG59XG5cbmg2IHtcbiAgZm9udC1zaXplOiBtcygwKTtcbn1cblxucCB7XG4gIGZvbnQtc2l6ZTogbXMoMCk7XG4gIG1hcmdpbjogbXMoMCkgMDtcbn1cblxuaW1nIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbnNlY3Rpb24ge1xuICBtYXJnaW46IG1zKDQpIDA7XG59XG5cbmhlYWRlciwgZm9vdGVyIHtcbiAgbWFyZ2luOiBtcyg0KSAwO1xufVxuXG51bCB7XG4gIHBhZGRpbmctbGVmdDogMS4xMjVlbTtcbn1cblxub2wge1xuICBwYWRkaW5nLWxlZnQ6IDEuNWVtO1xufVxuIiwiLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBEZWZhdWx0IFZhcmlhYmxlc1xuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBEZWZhdWx0IEZlYXR1cmVzXG4kYnJlYWtwb2ludC1kZWZhdWx0LW1lZGlhOiAgICAgIGFsbCAhZGVmYXVsdDtcbiRicmVha3BvaW50LWRlZmF1bHQtZmVhdHVyZTogICAgbWluLXdpZHRoICFkZWZhdWx0O1xuJGJyZWFrcG9pbnQtZGVmYXVsdC1wYWlyOiAgICAgICB3aWR0aCAhZGVmYXVsdDtcblxuLy8gRGVmYXVsdCBUcmFuc2Zvcm1zXG4kYnJlYWtwb2ludC1mb3JjZS1tZWRpYS1hbGw6ICAgIGZhbHNlICFkZWZhdWx0O1xuJGJyZWFrcG9pbnQtdG8tZW1zOiAgICAgICAgICAgICBmYWxzZSAhZGVmYXVsdDtcbiRicmVha3BvaW50LXJlc29sdXRpb25zOiAgICAgICAgdHJ1ZSAhZGVmYXVsdDtcblxuLy8gRGVmYXVsdCBObyBRdWVyeSBPcHRpb25zXG4kYnJlYWtwb2ludC1uby1xdWVyaWVzOiAgICAgICAgIGZhbHNlICFkZWZhdWx0O1xuJGJyZWFrcG9pbnQtbm8tcXVlcnktZmFsbGJhY2tzOiBmYWxzZSAhZGVmYXVsdDtcblxuLy8gRGVmdGF1bHQgQmFzZSBGb250IFNpemVcbiRicmVha3BvaW50LWJhc2UtZm9udC1zaXplOiAgICAgMTZweCAhZGVmYXVsdDtcblxuLy8gTGVnYWN5IFN5bnRheCBTdXBwb3J0XG4kYnJlYWtwb2ludC1sZWdhY3ktc3ludGF4OiAgICAgIGZhbHNlICFkZWZhdWx0O1xuXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIEltcG9ydHNcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuQGltcG9ydCAnYnJlYWtwb2ludC9jb250ZXh0JztcbkBpbXBvcnQgJ2JyZWFrcG9pbnQvaGVscGVycyc7XG5AaW1wb3J0ICdicmVha3BvaW50L3BhcnNlcnMnO1xuQGltcG9ydCAnYnJlYWtwb2ludC9uby1xdWVyeSc7XG5cbkBpbXBvcnQgJ2JyZWFrcG9pbnQvcmVzcG9uZC10byc7XG5cbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gQnJlYWtwb2ludCBNaXhpblxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5cbkBtaXhpbiBicmVha3BvaW50KCRxdWVyeSwgJG5vLXF1ZXJ5OiBmYWxzZSkge1xuICAvLyBSZXNldCBjb250ZXh0c1xuICBAaW5jbHVkZSBwcml2YXRlLWJyZWFrcG9pbnQtcmVzZXQtY29udGV4dHMoKTtcblxuICAkYnJlYWtwb2ludDogYnJlYWtwb2ludCgkcXVlcnksIGZhbHNlKTtcblxuICAkcXVlcnktc3RyaW5nOiBtYXAtZ2V0KCRicmVha3BvaW50LCAncXVlcnknKTtcbiAgJHF1ZXJ5LWZhbGxiYWNrOiBtYXAtZ2V0KCRicmVha3BvaW50LCAnZmFsbGJhY2snKTtcblxuICAkcHJpdmF0ZS1icmVha3BvaW50LWNvbnRleHQtaG9sZGVyOiBtYXAtZ2V0KCRicmVha3BvaW50LCAnY29udGV4dCBob2xkZXInKSAhZ2xvYmFsO1xuICAkcHJpdmF0ZS1icmVha3BvaW50LXF1ZXJ5LWNvdW50OiBtYXAtZ2V0KCRicmVha3BvaW50LCAncXVlcnkgY291bnQnKSAhZ2xvYmFsO1xuXG4gIC8vIEFsbG93IGZvciBhbiBhcy1uZWVkZWQgb3ZlcnJpZGUgb3IgdXNhZ2Ugb2Ygbm8gcXVlcnkgZmFsbGJhY2suXG4gIEBpZiAkbm8tcXVlcnkgIT0gZmFsc2Uge1xuICAgICRxdWVyeS1mYWxsYmFjazogJG5vLXF1ZXJ5O1xuICB9XG5cbiAgQGlmICRxdWVyeS1mYWxsYmFjayAhPSBmYWxzZSB7XG4gICAgJGNvbnRleHQtc2V0dGVyOiBwcml2YXRlLWJyZWFrcG9pbnQtc2V0LWNvbnRleHQoJ25vLXF1ZXJ5JywgJHF1ZXJ5LWZhbGxiYWNrKTtcbiAgfVxuXG4gIC8vIFByaW50IE91dCBRdWVyeSBTdHJpbmdcbiAgQGlmIG5vdCAkYnJlYWtwb2ludC1uby1xdWVyaWVzIHtcbiAgICBAbWVkaWEgI3skcXVlcnktc3RyaW5nfSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH1cblxuICBAaWYgJGJyZWFrcG9pbnQtbm8tcXVlcnktZmFsbGJhY2tzICE9IGZhbHNlIG9yICRicmVha3BvaW50LW5vLXF1ZXJpZXMgPT0gdHJ1ZSB7XG5cbiAgICAkdHlwZTogdHlwZS1vZigkYnJlYWtwb2ludC1uby1xdWVyeS1mYWxsYmFja3MpO1xuICAgICRwcmludDogZmFsc2U7XG5cbiAgICBAaWYgKCR0eXBlID09ICdib29sJykge1xuICAgICAgJHByaW50OiB0cnVlO1xuICAgIH1cbiAgICBAZWxzZSBpZiAoJHR5cGUgPT0gJ3N0cmluZycpIHtcbiAgICAgIEBpZiAkcXVlcnktZmFsbGJhY2sgPT0gJGJyZWFrcG9pbnQtbm8tcXVlcnktZmFsbGJhY2tzIHtcbiAgICAgICAgJHByaW50OiB0cnVlO1xuICAgICAgfVxuICAgIH1cbiAgICBAZWxzZSBpZiAoJHR5cGUgPT0gJ2xpc3QnKSB7XG4gICAgICBAZWFjaCAkd3JhcHBlciBpbiAkYnJlYWtwb2ludC1uby1xdWVyeS1mYWxsYmFja3Mge1xuICAgICAgICBAaWYgJHF1ZXJ5LWZhbGxiYWNrID09ICR3cmFwcGVyIHtcbiAgICAgICAgICAkcHJpbnQ6IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBXcml0ZSBGYWxsYmFja1xuICAgIEBpZiAoJHF1ZXJ5LWZhbGxiYWNrICE9IGZhbHNlKSBhbmQgKCRwcmludCA9PSB0cnVlKSB7XG4gICAgICAkdHlwZS1mYWxsYmFjazogdHlwZS1vZigkcXVlcnktZmFsbGJhY2spO1xuXG4gICAgICBAaWYgKCR0eXBlLWZhbGxiYWNrICE9ICdib29sJykge1xuICAgICAgICAjeyRxdWVyeS1mYWxsYmFja30gJiB7XG4gICAgICAgICAgQGNvbnRlbnQ7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIEBlbHNlIHtcbiAgICAgICAgQGNvbnRlbnQ7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgQGluY2x1ZGUgcHJpdmF0ZS1icmVha3BvaW50LXJlc2V0LWNvbnRleHRzKCk7XG59XG5cblxuQG1peGluIG1xKCRxdWVyeSwgJG5vLXF1ZXJ5OiBmYWxzZSkge1xuICBAaW5jbHVkZSBicmVha3BvaW50KCRxdWVyeSwgJG5vLXF1ZXJ5KSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cbiIsIi8vIENvbnRhaW5lciBTeW50YXhcbi8vID09PT09PT09PT09PT09PT1cblxuLy8gQ29udGFpbmVyIFttaXhpbl1cbi8vIC0tLS0tLS0tLS0tLS0tLS0tXG4vLyBTZXQgYSBjb250YWluZXIgZWxlbWVudFxuLy8gLSBbJGxheW91dF0gIDogPHNldHRpbmdzPlxuQG1peGluIGNvbnRhaW5lcihcbiAgJGxheW91dDogJHN1c3lcbikge1xuICAkaW5zcGVjdCAgICA6ICRsYXlvdXQ7XG4gICRsYXlvdXQgICAgIDogcGFyc2UtZ3JpZCgkbGF5b3V0KTtcblxuICAkX3dpZHRoICAgICA6IGdldC1jb250YWluZXItd2lkdGgoJGxheW91dCk7XG4gICRfanVzdGlmeSAgIDogcGFyc2UtY29udGFpbmVyLXBvc2l0aW9uKHN1c3ktZ2V0KGNvbnRhaW5lci1wb3NpdGlvbiwgJGxheW91dCkpO1xuICAkX3Byb3BlcnR5ICA6IGlmKHN1c3ktZ2V0KG1hdGgsICRsYXlvdXQpID09IHN0YXRpYywgd2lkdGgsIG1heC13aWR0aCk7XG5cbiAgJF9ib3ggICAgICAgOiBzdXN5LWdldChib3gtc2l6aW5nLCAkbGF5b3V0KTtcblxuICBAaWYgJF9ib3gge1xuICAgIEBpbmNsdWRlIG91dHB1dCgoYm94LXNpemluZzogJF9ib3gpKTtcbiAgfVxuXG4gIEBpbmNsdWRlIHN1c3ktaW5zcGVjdChjb250YWluZXIsICRpbnNwZWN0KTtcbiAgQGluY2x1ZGUgZmxvYXQtY29udGFpbmVyKCRfd2lkdGgsICRfanVzdGlmeSwgJF9wcm9wZXJ0eSk7XG4gIEBpbmNsdWRlIHNob3ctZ3JpZCgkbGF5b3V0KTtcbn1cblxuLy8gQ29udGFpbmVyIFtmdW5jdGlvbl1cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBSZXR1cm4gY29udGFpbmVyIHdpZHRoXG4vLyAtIFskbGF5b3V0XSAgOiA8c2V0dGluZ3M+XG5AZnVuY3Rpb24gY29udGFpbmVyKFxuICAkbGF5b3V0OiAkc3VzeVxuKSB7XG4gICRsYXlvdXQ6IHBhcnNlLWdyaWQoJGxheW91dCk7XG4gIEByZXR1cm4gZ2V0LWNvbnRhaW5lci13aWR0aCgkbGF5b3V0KTtcbn1cblxuLy8gR2V0IENvbnRhaW5lciBXaWR0aFxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gQ2FsY3VsYXRlIHRoZSBjb250YWluZXIgd2lkdGhcbi8vIC0gWyRsYXlvdXRdOiA8c2V0dGluZ3M+XG5AZnVuY3Rpb24gZ2V0LWNvbnRhaW5lci13aWR0aChcbiAgJGxheW91dDogJHN1c3lcbikge1xuICAkbGF5b3V0ICAgICAgICAgOiBwYXJzZS1ncmlkKCRsYXlvdXQpO1xuICAkX3dpZHRoICAgICAgICAgOiBzdXN5LWdldChjb250YWluZXIsICRsYXlvdXQpO1xuICAkX2NvbHVtbi13aWR0aCAgOiBzdXN5LWdldChjb2x1bW4td2lkdGgsICRsYXlvdXQpO1xuICAkX21hdGggICAgICAgICAgOiBzdXN5LWdldChtYXRoLCAkbGF5b3V0KTtcblxuICBAaWYgbm90KCRfd2lkdGgpIG9yICRfd2lkdGggPT0gYXV0byB7XG4gICAgQGlmIHZhbGlkLWNvbHVtbi1tYXRoKCRfbWF0aCwgJF9jb2x1bW4td2lkdGgpIHtcbiAgICAgICRfY29sdW1ucyAgIDogc3VzeS1nZXQoY29sdW1ucywgJGxheW91dCk7XG4gICAgICAkX2d1dHRlcnMgICA6IHN1c3ktZ2V0KGd1dHRlcnMsICRsYXlvdXQpO1xuICAgICAgJF9zcHJlYWQgICAgOiBpZihpcy1zcGxpdCgkbGF5b3V0KSwgd2lkZSwgbmFycm93KTtcbiAgICAgICRfd2lkdGggICAgIDogc3VzeS1zdW0oJF9jb2x1bW5zLCAkX2d1dHRlcnMsICRfc3ByZWFkKSAqICRfY29sdW1uLXdpZHRoO1xuICAgIH0gQGVsc2Uge1xuICAgICAgJF93aWR0aDogMTAwJTtcbiAgICB9XG4gIH1cblxuICBAcmV0dXJuICRfd2lkdGg7XG59XG5cbi8vIFBhcnNlIENvbnRhaW5lciBQb3NpdGlvblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBQYXJzZSB0aGUgJGNvbnRhaW5lci1wb3NpdGlvbiBpbnRvIG1hcmdpbiB2YWx1ZXMuXG4vLyAtIFskanVzdGlmeV0gICA6IGxlZnQgfCBjZW50ZXIgfCByaWdodCB8IDxsZW5ndGg+IFs8bGVuZ3RoPl1cbkBmdW5jdGlvbiBwYXJzZS1jb250YWluZXItcG9zaXRpb24oXG4gICRqdXN0aWZ5OiBtYXAtZ2V0KCRzdXN5LWRlZmF1bHRzLCBjb250YWluZXItcG9zaXRpb24pXG4pIHtcbiAgJF9yZXR1cm46IGlmKCRqdXN0aWZ5ID09IGxlZnQsIDAsIGF1dG8pIGlmKCRqdXN0aWZ5ID09IHJpZ2h0LCAwLCBhdXRvKTtcblxuICBAaWYgbm90KGluZGV4KGxlZnQgcmlnaHQgY2VudGVyLCAkanVzdGlmeSkpIHtcbiAgICAkX3JldHVybjogbnRoKCRqdXN0aWZ5LCAxKTtcbiAgICAkX3JldHVybjogJF9yZXR1cm4gaWYobGVuZ3RoKCRqdXN0aWZ5KSA+IDEsIG50aCgkanVzdGlmeSwgMiksICRfcmV0dXJuKTtcbiAgfVxuXG4gIEByZXR1cm4gJF9yZXR1cm47XG59XG4iLCIvLyByZW0gU3VwcG9ydFxuLy8gPT09PT09PT09PT1cblxuLy8gcmVtXG4vLyAtLS1cbi8vIENoZWNrIGZvciBhbiBleGlzdGluZyBzdXBwb3J0IG1peGluLCBvciBvdXRwdXQgZGlyZWN0bHkuXG4vLyAtICRwcm9wICA6IDxjc3MgcHJvcGVydHk+XG4vLyAtICR2YWwgICA6IDxjc3MgdmFsdWU+XG5AbWl4aW4gc3VzeS1yZW0oXG4gICRwcm9wLFxuICAkdmFsXG4pIHtcbiAgJF9yZXFzOiAoXG4gICAgdmFyaWFibGU6IHJoeXRobS11bml0IHJlbS13aXRoLXB4LWZhbGxiYWNrLFxuICAgIG1peGluOiByZW0sXG4gICk7XG4gIEBpZiBzdXN5LXN1cHBvcnQocmVtLCAkX3JlcXMsICR3YXJuOiBmYWxzZSkgYW5kICRyaHl0aG0tdW5pdCA9PSByZW0ge1xuICAgIEBpbmNsdWRlIHJlbSgkcHJvcCwgJHZhbCk7XG4gIH0gQGVsc2Uge1xuICAgICN7JHByb3B9OiAkdmFsO1xuICB9XG59XG4iLCIvLyBTdXN5IEZhbGxiYWNrIENsZWFyZml4XG4vLyA9PT09PT09PT09PT09PT09PT09PT09XG5cblxuLy8gQ2xlYXJmaXhcbi8vIC0tLS0tLS0tXG4vLyBDaGVjayBmb3IgYW4gZXhpc3Rpbmcgc3VwcG9ydCBtaXhpbiwgb3IgcHJvdmlkZSBhIHNpbXBsZSBmYWxsYmFjay5cbkBtaXhpbiBzdXN5LWNsZWFyZml4IHtcbiAgQGlmIHN1c3ktc3VwcG9ydChjbGVhcmZpeCwgKG1peGluOiBjbGVhcmZpeCkpIHtcbiAgICBAaW5jbHVkZSBjbGVhcmZpeDtcbiAgfSBAZWxzZSB7XG4gICAgJjphZnRlciB7XG4gICAgICBjb250ZW50OiBcIiBcIjtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgY2xlYXI6IGJvdGg7XG4gICAgfVxuICB9XG59XG4iLCIvKiFcbiAqIEBmaWxlIChTTUFDU1MgbW9kdWxlKVxuICogRGVmaW5lcyBwb3N0TGlzdCBDb21wb25lbnRcbiAqL1xuXG4ucG9zdExpc3Qge1xuICBwYWRkaW5nLWxlZnQ6IDA7XG4gfVxuXG4ucG9zdExpc3QgbGkge1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgbGlnaHRlbigkZ3JheS1tZWRpdW0sIDE1JSk7XG4gICY6Zmlyc3Qtb2YtdHlwZSB7XG4gICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIGxpZ2h0ZW4oJGdyYXktbWVkaXVtLCAxNSUpO1xuICB9XG59XG5cbi5wb3N0TGlzdCBoNiB7XG4gIGZvbnQtZmFtaWx5OiAkc2FucztcbiAgbGV0dGVyLXNwYWNpbmc6IC4wNWVtO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBmb250LXNpemU6IG1zKC0yKTtcbn1cblxuLnBvc3RMaXN0IGgyIHtcbiAgbWFyZ2luLXRvcDogMDtcbn1cbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ== */